from aiogram import Bot, Dispatcher, executor, types
import logging
import re
from pathlib import Path

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_TOKEN = "7680517671:AAHRTvxhvuvlEctp8j55KTpxZX_y47SlBGM"
ADMIN_CHAT_ID = 220564316
VIDEO_PLATFORMS = r"(youtu\.be|youtube\.com|vk\.com|disk\.yandex\.ru|drive\.google\.com)"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")

# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ë–î)
user_data = {}

def is_valid_video_link(url: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∏–¥–µ–æ"""
    return re.search(VIDEO_PLATFORMS, url) is not None

@dp.message_handler(commands=["start"])
async def start_cmd(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_data[message.from_user.id] = {}
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("Mini", "Full", "Pro", "Ultra")
    
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç PlayDNA.\n–í—ã–±–µ—Ä–∏ —Ñ–æ—Ä–º–∞—Ç –æ—Ç—á—ë—Ç–∞:",
        reply_markup=keyboard
    )
    logging.info(f"–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.id}")

@dp.message_handler(commands=["get_id"])
async def get_id(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    await message.answer(
        f"üÜî –í–∞—à ID: `{message.from_user.id}`\nüë§ Username: @{message.from_user.username}",
        parse_mode="Markdown"
    )

@dp.message_handler(lambda m: m.from_user.id in user_data and not user_data[m.from_user.id].get("format"))
async def get_format(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞"""
    user_data[message.from_user.id]["format"] = message.text.strip()
    await message.answer(
        "üìé –ü—Ä–∏—à–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ (YouTube, VK, Google –î–∏—Å–∫):",
        reply_markup=types.ReplyKeyboardRemove()
    )

@dp.message_handler(lambda m: m.from_user.id in user_data and not user_data[m.from_user.id].get("video"))
async def get_video(message: types.Message):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∏–¥–µ–æ"""
    video_link = message.text.strip()
    
    if not is_valid_video_link(video_link):
        await message.answer("üö´ –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ YouTube, VK –∏–ª–∏ Google –î–∏—Å–∫.")
        return
        
    user_data[message.from_user.id]["video"] = video_link
    await message.answer("üéΩ –£–∫–∞–∂–∏ –Ω–æ–º–µ—Ä –∏–≥—Ä–æ–∫–∞, —Ü–≤–µ—Ç —Ñ–æ—Ä–º—ã –∏ –ø–æ–∑–∏—Ü–∏—é:")

@dp.message_handler(lambda m: m.from_user.id in user_data and not user_data[m.from_user.id].get("player_info"))
async def get_player_info(message: types.Message):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏–≥—Ä–æ–∫–µ"""
    user_data[message.from_user.id]["player_info"] = message.text.strip()
    await message.answer("üìû –¢–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏:")

@dp.message_handler(lambda m: m.from_user.id in user_data and not user_data[m.from_user.id].get("contact"))
async def get_contact(message: types.Message):
    """–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏"""
    try:
        user = message.from_user
        data = user_data[user.id]
        data["contact"] = message.text.strip()

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        admin_msg = (
            "üì• *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!*\n"
            f"üîπ –§–æ—Ä–º–∞—Ç: {data['format']}\n"
            f"üîó –í–∏–¥–µ–æ: {data['video']}\n"
            f"üéΩ –ò–≥—Ä–æ–∫: {data['player_info']}\n"
            f"üìû –ö–æ–Ω—Ç–∞–∫—Ç: {data['contact']}\n\n"
            f"üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: @{user.username}\n"
            f"üÜî ID: `{user.id}`\n"
            f"üè∑ –ò–º—è: {user.full_name}"
        )

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        await bot.send_message(
            chat_id=ADMIN_CHAT_ID,
            text=admin_msg,
            parse_mode="Markdown"
        )

        # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add("/start")
        
        await message.answer(
            "‚úÖ –ì–æ—Ç–æ–≤–æ! –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.\n–•–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–Ω—É?",
            reply_markup=keyboard
        )

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏: {str(e)}")
        await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    finally:
        user_data.pop(user.id, None)

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)

